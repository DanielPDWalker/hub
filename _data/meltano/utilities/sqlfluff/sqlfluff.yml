name: sqlfluff
label: SQLFluff
namespace: sqlfluff
pip_url: sqlfluff[dbt]
maintenance_status: active
repo: https://github.com/sqlfluff/sqlfluff
variant: sqlfluff
commands:
  lint:
    args: lint
    description: Lint SQL in transform models.
  fix:
    args: fix
    description: Automatically fix SQL files according to your defined rules.
  fix-force:
    args: fix --force
    description: Automatically fix SQL files according to your defined rules (does not ask for confirmation).
logo_url: /assets/logos/utilities/sqlfluff.png
definition: is a linting tool for SQL files, often used with dbt to enforce SQL code standards.
next_steps: |
  1. Customize [the config files](https://docs.sqlfluff.com/en/stable/configuration.html) to match your team's style guide.
    SQLFluff comes with logic defaults so you will only need to override configurations you want to change.
  1. Run `meltano invoke sqlfluff:lint` to lint your SQL files.
  1. Optionally, if you're using dbt and your project is expecting environment variables to be set like `DBT_SNOWFLAKE_ACCOUNT`
    you can set the sqlfluff `namespace` setting in your meltano.yml to `dbt_<adapter_name>` (using your specific adapter i.e. `dbt_snowflake`)
    and configure any required dbt setting under your SQLFluff utility so they're exported with the `DBT_<ADAPTER_NAME>` prefix properly when SQLFluff runs.
